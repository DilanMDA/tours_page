{"version":3,"sources":["Loading.js","Tour.js","Tours.js","App.js","index.js"],"names":["Loading","loading","className","size","color","Tour","id","image","info","price","name","removeTour","useState","readMore","setReadMore","src","alt","substring","onClick","Tours","tours","map","tour","key","App","setLoading","setTours","fetchTours","a","fetch","response","json","setTimeout","console","log","useEffect","length","newTours","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NAqBeA,EAjBC,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAQhB,OACE,0BAAMC,UAAU,WAEV,kBAAE,IAAF,CAAcC,KAAO,IAAKC,MAAQ,UAAWH,QAASA,MCQjDI,EArBF,SAAC,GAA+C,IAA9CC,EAA6C,EAA7CA,GAAIC,EAAyC,EAAzCA,MAAMC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,WAAgB,EAC1BC,oBAAS,GADiB,mBACnDC,EADmD,KACzCC,EADyC,KAE1D,OAAO,6BAASZ,UAAU,eACxB,yBAAKa,IAAKR,EAAOS,IAAKN,IACtB,gCACE,yBAAKR,UAAU,aACb,4BAAKQ,GACL,wBAAIR,UAAU,cAAd,KAA8BO,IAEhC,2BAAII,EAASL,EAAD,UAASA,EAAKS,UAAU,EAAE,KAA1B,OACZ,4BAAQC,QAAU,kBAAKJ,GAAaD,KACjCA,EAAS,YAAY,cAGxB,4BAAQX,UAAU,aAAagB,QAAS,kBAAIP,EAAWL,KAAvD,qBCASa,EAdD,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,MAAOT,EAAgB,EAAhBA,WACrB,OAAO,iCACL,yBAAKT,UAAU,SACf,0CACA,yBAAKA,UAAU,eAEd,6BACGkB,EAAMC,KAAI,SAACC,GACV,OAAO,kBAAC,EAAD,eAAMC,IAAOD,EAAKhB,IAAQgB,EAA1B,CAAgCX,WAAYA,WCgD7Ca,MApDf,WAAgB,IAAD,EACiBZ,oBAAS,GAD1B,mBACNX,EADM,KACGwB,EADH,OAEab,mBAAS,IAFtB,mBAENQ,EAFM,KAECM,EAFD,KAQPC,EAAU,uCAAG,8BAAAC,EAAA,6DACjBH,GAAW,GADM,kBAGQI,MAZjB,8CASS,cAGTC,EAHS,gBAIKA,EAASC,OAJd,OAITX,EAJS,OAKfY,YAAW,WACTP,GAAW,KACX,MAEFC,EAASN,GATM,kDAYfY,YAAW,WACTP,GAAW,KACX,MACFQ,QAAQC,IAAR,MAfe,0DAAH,qDAsBhB,OAJAC,qBAAU,WACRR,MAEC,IACC1B,EAEA,8BACE,yBAAKC,UAAU,WACf,kBAAC,EAAD,CAASD,QAAWA,MAKR,IAAfmB,EAAMgB,OACD,8BACJ,yBAAKlC,UAAU,SACb,6CACA,4BAAQA,UAAU,MAAOgB,QAASS,GAAlC,aAIC,8BACL,kBAAC,EAAD,CAAOP,MAASA,EAAOT,WA5CN,SAACL,GAClB,IAAM+B,EAAWjB,EAAMkB,QAAO,SAAChB,GAAD,OAASA,EAAKhB,KAAMA,KAClDoB,EAASW,QCPbE,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.85cbbdae.chunk.js","sourcesContent":["// import React, { useState, useEffect } from 'react';\nimport React from 'react';\nimport HashLoader from \"react-spinners/HashLoader\";\n// import Tour from './Tour';\nconst Loading = ({loading}) => {\n  // const [loading, setLoading] = useState(false);\n  // useEffect(() => {\n  //   setLoading(true);\n  //   setTimeout(() => {\n  //     setLoading(false);\n  //   },3750)\n  // }, [])\n  return (\n    <main className=\"loading\">\n      {\n          < HashLoader  size ={300} color ={\"#16B6C2\"} loading={loading} />\n      }\n    </main>\n  );\n};\n\nexport default Loading;\n","import React, { useState } from 'react';\n\nconst Tour = ({id, image,info, price, name, removeTour}) => {\n  const [readMore, setReadMore] = useState(false);\n  return <article className=\"single-tour\">\n    <img src={image} alt={name}/>\n    <footer>\n      <div className=\"tour-info\">\n        <h4>{name}</h4>\n        <h4 className=\"tour-price\"> ${price}</h4>\n      </div>\n      <p>{readMore?info:`${info.substring(0,200)}...`}\n      <button onClick= {()=> setReadMore(!readMore)}>\n        {readMore?'show less':'read more'}\n      </button>\n      </p>\n      <button className=\"delete-btn\" onClick={()=>removeTour(id)}>\n        not interested\n        </button>\n    </footer>\n  </article>;\n};\n\nexport default Tour;\n","import React from 'react';\nimport Tour from './Tour';\nconst Tours = ({tours, removeTour}) => {\n  return <section> \n    <div className=\"title\">\n    <h2> our tours</h2>\n    <div className=\"underline\"></div>\n    </div>\n     <div>\n       {tours.map((tour)=>{\n         return <Tour key = {tour.id} {...tour} removeTour={removeTour}></Tour>\n       })}\n     </div>\n  </section>;\n};\n\nexport default Tours;\n","import React, { useState, useEffect } from 'react'\nimport Loading from './Loading'\nimport Tours from './Tours'\n// ATTENTION!!!!!!!!!!\n// I SWITCHED TO PERMANENT DOMAIN\nconst url = 'https://course-api.com/react-tours-project'\nfunction App() {\n  const [loading, setLoading] = useState(true);\n  const [tours, setTours] = useState([]);\n\n  const removeTour = (id: any) =>{\n    const newTours = tours.filter((tour) =>tour.id !==id);\n    setTours(newTours);\n  }\n  const fetchTours = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch(url);\n      const tours = await response.json();\n      setTimeout(() => {\n        setLoading(false);\n      },3750)\n      // setLoading(false);\n      setTours(tours);\n    } catch (error) {\n      // setLoading(false);\n      setTimeout(() => {\n        setLoading(false);\n      },3750)\n      console.log(error); \n    }\n  };\n  useEffect(() => {\n    fetchTours();\n    \n  }, []);\n  if (loading) {\n    return (\n      <main >\n        <div className='loading'>\n        <Loading loading = {loading}/>\n        </div>\n      </main>\n    );\n  }\n  if(tours.length===0){\n    return<main>\n      <div className=\"title\">\n        <h2>no tours left</h2>\n        <button className='btn'  onClick={fetchTours}>refresh</button>\n      </div>\n    </main>\n  }\n  return <main>\n    <Tours tours = {tours} removeTour = {removeTour}/>\n  </main>\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}